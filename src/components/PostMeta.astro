---
import { formatPublishedDate } from "@/lib/datetime";
import { getLocaleLabel, type Locale } from "@/config/locales";
import type { NormalizedBlogEntry } from "@/lib/content/posts";
import { getTranslator } from "@/lib/i18n/translator";
import { getRelativeLocaleUrl } from "astro:i18n";

interface Props {
  post: NormalizedBlogEntry;
  availableLocales: Locale[];
}

const { post, availableLocales } = Astro.props;
const { entry } = post;
const tags = entry.data.tags ?? [];
const t = await getTranslator(post.locale);
---

<div
  class="flex flex-col gap-3 rounded-3xl border border-border-light bg-surface-light/70 p-6 text-sm shadow-sm dark:border-border-dark dark:bg-surface-dark/70"
>
  <div
    class="flex flex-wrap items-center gap-3 text-xs uppercase tracking-wider text-slate-500 dark:text-slate-400"
  >
    <span>{formatPublishedDate(entry.data.publishedAt, post.locale)}</span>
    <span
      class="rounded-full bg-accent/10 px-3 py-1 text-accent dark:bg-accent/20 dark:text-accent-soft"
    >
      {entry.data.category}
    </span>
  </div>
  {
    entry.data.description && (
      <p class="text-slate-600 dark:text-slate-300">{entry.data.description}</p>
    )
  }
  {
    tags.length > 0 && (
      <ul class="flex flex-wrap gap-2 text-xs">
        {tags.map((tag: string) => (
          <li class="rounded-full border border-border-light px-2 py-1 text-slate-500 transition hover:border-accent/60 hover:text-accent dark:border-border-dark dark:text-slate-400">
            <a href={getRelativeLocaleUrl(post.locale, `tags/${tag}`)}>#{tag}</a>
          </li>
        ))}
      </ul>
    )
  }
  <div class="flex flex-wrap items-center gap-2 text-xs text-slate-500 dark:text-slate-400">
    <span class="font-semibold uppercase tracking-widest">{t("postMeta.available")}</span>
    {
      availableLocales.map((locale) => (
        <span
          class:list={[
            "rounded-full border px-2 py-1",
            locale === post.locale
              ? "border-accent/60 text-accent"
              : "border-border-light text-slate-500 dark:border-border-dark",
          ]}
        >
          {getLocaleLabel(locale)}
        </span>
      ))
    }
  </div>
</div>
