---
import {
  DISPLAY_LOCALE_ORDER,
  LOCALE_FALLBACK_MESSAGES,
  getLocaleLabel,
  type Locale,
} from "@/config/locales";

interface Props {
  currentLocale: Locale;
  localeLinks: Record<Locale, string | undefined>;
  condensed?: boolean;
}

const { currentLocale, localeLinks, condensed = false } = Astro.props;

const availableLocales = DISPLAY_LOCALE_ORDER.filter((locale) => Boolean(localeLinks[locale]));
const missingLocales = DISPLAY_LOCALE_ORDER.filter((locale) => !availableLocales.includes(locale));
---

<div class:list={["flex flex-col gap-2 text-sm", condensed ? "items-end" : ""]}>
  <div
    class="inline-flex items-center gap-1 rounded-full border border-border-light bg-surface-light p-1 shadow-sm transition-colors dark:border-border-dark dark:bg-surface-dark"
  >
    {
      availableLocales.map((locale) => {
        const href = localeLinks[locale];
        const isActive = locale === currentLocale;
        return (
          <a
            href={href}
            data-locale-link={locale}
            class:list={[
              "rounded-full px-3 py-1 font-medium transition-colors",
              isActive
                ? "bg-accent/10 text-accent dark:bg-accent/20 dark:text-accent-soft"
                : "text-slate-500 hover:text-text-light dark:text-slate-300 dark:hover:text-text-dark",
            ]}
            aria-current={isActive ? "true" : "false"}
          >
            {getLocaleLabel(locale)}
          </a>
        );
      })
    }
  </div>
  {
    missingLocales.length > 0 && (
      <p class="text-xs text-slate-500 dark:text-slate-400">
        {LOCALE_FALLBACK_MESSAGES[currentLocale]}
      </p>
    )
  }
</div>
