---
import "@/styles/global.css";

import ThemeToggle from "@/components/ThemeToggle.astro";
import LocaleSwitcher from "@/components/LocaleSwitcher.astro";
import ThemeScript from "@/components/ThemeScript.astro";
import { DEFAULT_LOCALE, DISPLAY_LOCALE_ORDER, type Locale } from "@/config/locales";

interface Props {
  title?: string;
  description?: string;
  locale?: Locale;
  localeLinks?: Record<Locale, string | undefined>;
}

const {
  title = "Astro Blog v2",
  description = "Locale-aware blogging experience powered by Astro.",
  locale = DEFAULT_LOCALE,
  localeLinks = {} as Record<Locale, string | undefined>,
} = Astro.props as Props;

const fallbackLocaleLinks = Object.fromEntries(
  DISPLAY_LOCALE_ORDER.map((candidate) => [candidate, `/${candidate}`] as const)
) as Record<Locale, string>;

const computedLocaleLinks = DISPLAY_LOCALE_ORDER.reduce<Record<Locale, string | undefined>>(
  (acc, candidate) => {
    acc[candidate] = localeLinks?.[candidate];
    return acc;
  },
  {} as Record<Locale, string | undefined>
);

const hasProvidedLocales = Object.values(computedLocaleLinks).some(Boolean);
const effectiveLocaleLinks = hasProvidedLocales ? computedLocaleLinks : fallbackLocaleLinks;

const canonical = new URL(Astro.url.pathname, Astro.site ?? "https://example.com").toString();

const navLinks = [
  { label: "Home", href: `/${locale}` },
  { label: "Posts", href: `/${locale}/posts` },
  { label: "Tags", href: `/${locale}/tags` },
];

const isActive = (href: string) => Astro.url.pathname === new URL(href, Astro.url).pathname;
---

<html lang={locale} class="antialiased">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <link rel="canonical" href={canonical} />
    <ThemeScript />
  </head>
  <body
    class="flex min-h-screen flex-col bg-background-light text-text-light transition-colors dark:bg-background-dark dark:text-text-dark"
  >
    <header
      class="border-b border-border-light bg-surface-light/70 backdrop-blur-sm transition-colors dark:border-border-dark dark:bg-surface-dark/60"
    >
      <div
        class="mx-auto flex w-full max-w-5xl flex-wrap items-center justify-between gap-4 px-4 py-6 sm:px-6 lg:px-8"
      >
        <a
          class="text-lg font-semibold tracking-tight text-text-light dark:text-text-dark"
          href={`/${locale}`}
        >
          omin.blog
        </a>
        <nav class="flex flex-wrap items-center gap-2 text-sm sm:gap-4">
          {
            navLinks.map((link) => (
              <a
                href={link.href}
                class:list={[
                  "rounded-full px-3 py-1 font-medium transition-colors",
                  isActive(link.href)
                    ? "bg-accent/10 text-accent dark:bg-accent/20 dark:text-accent-soft"
                    : "text-slate-500 hover:text-text-light dark:text-slate-300 dark:hover:text-text-dark",
                ]}
                aria-current={isActive(link.href) ? "page" : undefined}
              >
                {link.label}
              </a>
            ))
          }
        </nav>
        <LocaleSwitcher currentLocale={locale} localeLinks={effectiveLocaleLinks} condensed />
      </div>
    </header>
    <main class="flex-1 bg-background-light transition-colors dark:bg-background-dark">
      <slot />
    </main>
    <footer
      class="border-t border-border-light bg-surface-light py-6 text-sm text-slate-500 transition-colors dark:border-border-dark dark:bg-surface-dark dark:text-slate-400"
    >
      <div
        class="mx-auto flex max-w-5xl flex-col gap-3 px-4 sm:flex-row sm:items-center sm:justify-between sm:px-6 lg:px-8"
      >
        <p>Â© {new Date().getFullYear()} omin. Crafted with Astro.</p>
        <div class="flex items-center gap-4">
          <a class="hover:text-accent" href="https://docs.astro.build/">Read the Astro docs</a>
          <ThemeToggle />
        </div>
      </div>
    </footer>
  </body>
</html>
